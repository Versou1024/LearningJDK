package sun.security.util;

import java.util.ListResourceBundle;

public class Resources_sv extends ListResourceBundle
{
  private static final Object[][] contents = { { " ", " " }, { "  ", "  " }, { "      ", "      " }, { ", ", ", " }, { "\n", "\n" }, { "*******************************************", "*******************************************" }, { "*******************************************\n\n", "*******************************************\n\n" }, { "keytool error: ", "nyckelverktygsfel: " }, { "Illegal option:  ", "Ogiltigt alternativ:  " }, { "Try keytool -help", "Try keytool -help" }, { "Command option <flag> needs an argument.", "Kommandoalternativet {0} behöver ett argument." }, { "Warning:  Different store and key passwords not supported for PKCS12 KeyStores. Ignoring user-specified <command> value.", "Varning!  PKCS12 KeyStores har inte stöd för olika lösenord för lagret och nyckeln. Det användarspecificerade {0}-värdet ignoreras." }, { "-keystore must be NONE if -storetype is {0}", "-keystore måste vara NONE om -storetype är {0}" }, { "Too may retries, program terminated", "För många försök. Programmet avslutas." }, { "-storepasswd and -keypasswd commands not supported if -storetype is {0}", "-storepasswd- och -keypasswd-kommandon stöds inte om -storetype är {0}" }, { "-keypasswd commands not supported if -storetype is PKCS12", " keypasswd-kommandon stöds inte om -storetype är inställd på PKCS12" }, { "-keypass and -new can not be specified if -storetype is {0}", "-keypass och -new kan inte anges om -storetype är {0}" }, { "if -protected is specified, then -storepass, -keypass, and -new must not be specified", "om -protected har angetts får inte -storepass, -keypass och -new anges" }, { "if -srcprotected is specified, then -srcstorepass and -srckeypass must not be specified", "om -srcprotected anges får -srcstorepass och -srckeypass inte anges" }, { "if keystore is not password protected, then -storepass, -keypass, and -new must not be specified", "om nyckelfilen inte är lösenordsskyddad får -storepass, -keypass och -new inte anges" }, { "if source keystore is not password protected, then -srcstorepass and -srckeypass must not be specified", "om källnyckelfilen inte är lösenordsskyddad får -srcstorepass och -srckeypass inte anges" }, { "Validity must be greater than zero", "Giltigheten måste vara större än noll" }, { "provName not a provider", "{0} inte en leverantör" }, { "Usage error: no command provided", "Användningsfel: inget kommando angivet" }, { "Usage error, <arg> is not a legal command", "Användningsfel: {0} är inte ett giltigt kommando" }, { "Source keystore file exists, but is empty: ", "Nyckellagrets källfil finns, men är tom: " }, { "Please specify -srckeystore", "Ange -srckeystore" }, { "Must not specify both -v and -rfc with 'list' command", "Det går inte att specificera både -v och -rfc med 'list'-kommandot" }, { "Key password must be at least 6 characters", "Nyckellösenordet måste innehålla minst 6 tecken" }, { "New password must be at least 6 characters", "Det nya lösenordet måste innehålla minst 6 tecken" }, { "Keystore file exists, but is empty: ", "Keystore-filen finns, men är tom: " }, { "Keystore file does not exist: ", "Keystore-filen finns inte: " }, { "Must specify destination alias", "Du måste ange destinations-alias" }, { "Must specify alias", "Du måste ange alias" }, { "Keystore password must be at least 6 characters", "Keystore-lösenordet måste innehålla minst 6 tecken" }, { "Enter keystore password:  ", "Ange keystore-lösenord:  " }, { "Enter source keystore password:  ", "Ange lösenord för källnyckellagret:  " }, { "Enter destination keystore password:  ", "Ange destination för nyckellagrets lösenord:  " }, { "Keystore password is too short - must be at least 6 characters", "Keystore-lösenordet är för kort - det måste innehålla minst 6 tecken" }, { "Unknown Entry Type", "Okänd posttyp" }, { "Too many failures. Alias not changed", "Alias har inte ändrats p.g.a. för många fel." }, { "Entry for alias <alias> successfully imported.", "Posten för alias {0} har importerats." }, { "Entry for alias <alias> not imported.", "Posten för alias {0} har inte importerats." }, { "Problem importing entry for alias <alias>: <exception>.\nEntry for alias <alias> not imported.", "Ett problem uppstod vid importen av posten för alias {0}: {1}.\nPosten har inte importerats." }, { "Import command completed:  <ok> entries successfully imported, <fail> entries failed or cancelled", "Kommandoimporten slutförd: {0} poster har importerats, {1} poster var felaktiga eller uteslöts" }, { "Warning: Overwriting existing alias <alias> in destination keystore", "Varning! Det befintliga aliaset {0} i målnyckellagret skrivs över" }, { "Existing entry alias <alias> exists, overwrite? [no]:  ", "Aliaset {0} finns redan. Vill du skriva över det? [no]:  " }, { "Too many failures - try later", "För många fel - försök igen senare" }, { "Certification request stored in file <filename>", "Certifikat-förfrågan har lagrats i filen <{0}>" }, { "Submit this to your CA", "Skicka detta till din CA" }, { "if alias not specified, destalias, srckeypass, and destkeypass must not be specified", "om något alias inte anges får destalias, srckeypass och destkeypass inte anges" }, { "Certificate stored in file <filename>", "Certifikatet har lagrats i filen <{0}>" }, { "Certificate reply was installed in keystore", "Certifikatsvaret har installerats i keystore-filen" }, { "Certificate reply was not installed in keystore", "Certifikatsvaret har inte installerats i keystore-filen" }, { "Certificate was added to keystore", "Certifikatet har lagts till i keystore-filen" }, { "Certificate was not added to keystore", "Certifikatet har inte lagts till i keystore-filen" }, { "[Storing ksfname]", "[Lagrar {0}]" }, { "alias has no public key (certificate)", "{0} saknar offentlig nyckel (certifikat)" }, { "Cannot derive signature algorithm", "Det går inte att hämta någon signatur-algoritm" }, { "Alias <alias> does not exist", "Aliaset <{0}> finns inte" }, { "Alias <alias> has no certificate", "Aliaset <{0}> saknar certifikat" }, { "Key pair not generated, alias <alias> already exists", "Nyckelparet genererades inte. Aliaset <{0}> finns redan" }, { "Cannot derive signature algorithm", "Det går inte att hämta någon signatur-algoritm" }, { "Generating keysize bit keyAlgName key pair and self-signed certificate (sigAlgName) with a validity of validality days\n\tfor: x500Name", "Genererar {0}-bitars {1}-nyckelpar och självsignerat certifikat ({2}) med en giltighet på {3} dagar\n\tför: {4}" }, { "Enter key password for <alias>", "Ange nyckellösenord för <{0}>" }, { "\t(RETURN if same as keystore password):  ", "\t(RETURN om det är identiskt med keystore-lösenordet):  " }, { "Key password is too short - must be at least 6 characters", "Nyckellösenordet är för kort - det måste innehålla minst 6 tecken" }, { "Too many failures - key not added to keystore", "För många fel - nyckeln lades inte till i keystore-filen" }, { "Destination alias <dest> already exists", "Destinationsaliaset <{0}> finns redan" }, { "Password is too short - must be at least 6 characters", "Lösenordet är för kort - det måste innehålla minst 6 tecken" }, { "Too many failures. Key entry not cloned", "För många fel. Nyckelposten har inte klonats" }, { "key password for <alias>", "nyckellösenord för <{0}>" }, { "Keystore entry for <id.getName()> already exists", "Keystore-post för <{0}> finns redan" }, { "Creating keystore entry for <id.getName()> ...", "Skapar keystore-post för <{0}> ..." }, { "No entries from identity database added", "Inga poster från identitetsdatabasen har lagts till" }, { "Alias name: alias", "Aliasnamn: {0}" }, { "Creation date: keyStore.getCreationDate(alias)", "Skapat den: {0,date}" }, { "alias, keyStore.getCreationDate(alias), ", "{0}, {1,date}, " }, { "alias, ", "{0}, " }, { "Entry type: <type>", "Posttyp: {0}" }, { "Certificate chain length: ", "Längd på certifikatskedja: " }, { "Certificate[(i + 1)]:", "Certifikat[{0,number,integer}]:" }, { "Certificate fingerprint (MD5): ", "Certifikatsfingeravtryck (MD5): " }, { "Entry type: trustedCertEntry\n", "Posttyp: trustedCertEntry\n" }, { "trustedCertEntry,", "trustedCertEntry," }, { "Keystore type: ", "Keystore-typ: " }, { "Keystore provider: ", "Keystore-leverantör: " }, { "Your keystore contains keyStore.size() entry", "Din keystore innehåller en {0,number,integer} post" }, { "Your keystore contains keyStore.size() entries", "Din keystore innehåller {0,number,integer} poster" }, { "Failed to parse input", "Det går inte att analysera indata" }, { "Empty input", "Inga indata" }, { "Not X.509 certificate", "Inte ett X.509-certifikat" }, { "Cannot derive signature algorithm", "Det går inte att hämta någon signatur-algoritm" }, { "alias has no public key", "{0} saknar offentlig nyckel" }, { "alias has no X.509 certificate", "{0} saknar X.509-certifikat" }, { "New certificate (self-signed):", "Nytt certifikat (självsignerat):" }, { "Reply has no certificates", "Svaret saknar certifikat" }, { "Certificate not imported, alias <alias> already exists", "Certifikatet importerades inte. Aliaset <{0}> finns redan" }, { "Input not an X.509 certificate", "Indata är inte ett X.509-certifikat" }, { "Certificate already exists in keystore under alias <trustalias>", "Certifikatet finns redan i keystore-filen under aliaset <{0}>" }, { "Do you still want to add it? [no]:  ", "Vill du fortfarande lägga till det? [nej]:  " }, { "Certificate already exists in system-wide CA keystore under alias <trustalias>", "Certifikatet finns redan i systemkeystore-filen under aliaset <{0}>" }, { "Do you still want to add it to your own keystore? [no]:  ", "Vill du fortfarande lägga till det i din egen keystore-fil? [nej]:  " }, { "Trust this certificate? [no]:  ", "Betror du det här certifikatet? [nej]:  " }, { "YES", "JA" }, { "New prompt: ", "Nytt {0}: " }, { "Passwords must differ", "Lösenorden måste vara olika" }, { "Re-enter new prompt: ", "Ange nytt {0} igen: " }, { "Re-enter new password: ", "Ange det nya lösenordet igen: " }, { "They don't match. Try again", "De matchar inte. Försök igen" }, { "Enter prompt alias name:  ", "Ange {0}-aliasnamn:  " }, { "Enter new alias name\t(RETURN to cancel import for this entry):  ", "Ange ett nytt aliasnamn\t(skriv RETURN för att avbryta importen av denna post):  " }, { "Enter alias name:  ", "Ange aliasnamn:  " }, { "\t(RETURN if same as for <otherAlias>)", "\t(RETURN om det är det samma som för <{0}>)" }, { "*PATTERN* printX509Cert", "Ägare: {0}\nUtfärdare: {1}\nSerienummer: {2}\nGiltigt från: {3} till: {4}\nCertifikatfingeravtryck:\n\t MD5: {5}\n\t SHA1: {6}\n\t Signaturalgoritm: {7}\n\t Version: {8}" }, { "What is your first and last name?", "Vad heter du i för- och efternamn?" }, { "What is the name of your organizational unit?", "Vad heter din avdelning inom organisationen?" }, { "What is the name of your organization?", "Vad heter din organisation?" }, { "What is the name of your City or Locality?", "Vad heter din ort eller plats?" }, { "What is the name of your State or Province?", "Vad heter ditt land eller din provins?" }, { "What is the two-letter country code for this unit?", "Vilken är den tvåställiga landskoden?" }, { "Is <name> correct?", "Är {0} korrekt?" }, { "no", "nej" }, { "yes", "ja" }, { "y", "j" }, { "  [defaultValue]:  ", "  [{0}]:  " }, { "Alias <alias> has no key", "Aliaset <{0}> saknar nyckel" }, { "Alias <alias> references an entry type that is not a private key entry.  The -keyclone command only supports cloning of private key entries", "Aliaset <{0}> hänvisar till en posttyp som inte är någon privat nyckelpost. Kommandot -keyclone har endast stöd för kloning av privata nyckelposter" }, { "*****************  WARNING WARNING WARNING  *****************", "*****************  VARNING VARNING VARNING  *****************" }, { "* The integrity of the information stored in your keystore  *", "* Integriteten beträffande den information som lagras i keystore-filen  *" }, { "* The integrity of the information stored in the srckeystore*", "* Integriteten för informationen som lagras i srckeystore*" }, { "* has NOT been verified!  In order to verify its integrity, *", "* har INTE verifierats!  Om du vill verifiera dess integritet, *" }, { "* you must provide your keystore password.                  *", "* måste du tillhandahålla ditt keystore-lösenord.                  *" }, { "* you must provide the srckeystore password.                *", "* du måste ange lösenordet för srckeystore.                *" }, { "Certificate reply does not contain public key for <alias>", "Certifikatsvaret innehåller inte någon offentlig nyckel för <{0}>" }, { "Incomplete certificate chain in reply", "Ofullständig certifikatskedja i svaret" }, { "Certificate chain in reply does not verify: ", "Certifikatskedjan i svaret går inte att verifiera: " }, { "Top-level certificate in reply:\n", "Toppnivåcertifikatet i svaret:\n" }, { "... is not trusted. ", "... är inte betrott. " }, { "Install reply anyway? [no]:  ", "Vill du installera svaret ändå? [nej]:  " }, { "NO", "NEJ" }, { "Public keys in reply and keystore don't match", "De offentliga nycklarna i svaret och keystore-filen matchar inte varandra" }, { "Certificate reply and certificate in keystore are identical", "Certifikatssvaret och certifikatet i keystore-filen är identiska" }, { "Failed to establish chain from reply", "Det gick inte att upprätta någon kedja ur svaret" }, { "n", "n" }, { "Wrong answer, try again", "Fel svar. Försök på nytt." }, { "Secret key not generated, alias <alias> already exists", "Den hemliga nyckeln har inte genererats eftersom aliaset <{0}> redan finns" }, { "Please provide -keysize for secret key generation", "Ange -keysize för skapande av hemlig nyckel" }, { "keytool usage:\n", "nyckelverktyg:\n" }, { "Extensions: ", "Filtillägg: " }, { "-certreq     [-v] [-protected]", "-certreq     [-v] [-protected]" }, { "\t     [-alias <alias>] [-sigalg <sigalg>]", "\t     [-alias <alias>] [-sigalg <signaturalgoritm>]" }, { "\t     [-file <csr_file>] [-keypass <keypass>]", "\t     [-file <csr_fil>] [-keypass <nyckellösenord>]" }, { "\t     [-keystore <keystore>] [-storepass <storepass>]", "\t     [-keystore <keystore>] [-storepass <lagringslösenord>]" }, { "\t     [-storetype <storetype>] [-providername <name>]", "\t     [-storetype <storetype>] [-providername <name>]" }, { "\t     [-providerclass <provider_class_name> [-providerarg <arg>]] ...", "\t     [-providerclass <provider_class_name> [-providerarg <arg>]] ..." }, { "\t     [-providerpath <pathlist>]", "\t     [-providerpath <pathlist>]" }, { "-delete      [-v] [-protected] -alias <alias>", "-delete      [-v] [-protected] -alias <alias>" }, { "-exportcert  [-v] [-rfc] [-protected]", "-exportcert  [-v] [-rfc] [-protected]" }, { "\t     [-alias <alias>] [-file <cert_file>]", "\t     [-alias <alias>] [-file <certifikatsfil>]" }, { "-genkeypair  [-v] [-protected]", "-genkeypair  [-v] [-protected]" }, { "\t     [-alias <alias>]", "\t     [-alias <alias>]" }, { "\t     [-keyalg <keyalg>] [-keysize <keysize>]", "\t     [-keyalg <nyckelalgoritm>] [-keysize <nyckelstorlek>]" }, { "\t     [-sigalg <sigalg>] [-dname <dname>]", "\t     [-sigalg <signaturalgoritm>] [-dname <dnamn>]" }, { "\t     [-validity <valDays>] [-keypass <keypass>]", "\t     [-validity <dagar>] [-keypass <nyckellösenord>]" }, { "-genseckey   [-v] [-protected]", "-genseckey   [-v] [-protected]" }, { "-help", "-help" }, { "-importcert  [-v] [-noprompt] [-trustcacerts] [-protected]", "-importcert  [-v] [-noprompt] [-trustcacerts] [-protected]" }, { "\t     [-alias <alias>]", "\t     [-alias <alias>]" }, { "\t     [-alias <alias>] [-keypass <keypass>]", "\t     [-alias <alias>] [-keypass <keypass>]" }, { "\t     [-file <cert_file>] [-keypass <keypass>]", "\t     [-file <certifikatsfil>] [-keypass <nyckellösenord>]" }, { "-importkeystore [-v] ", "-importkeystore [-v] " }, { "\t     [-srckeystore <srckeystore>] [-destkeystore <destkeystore>]", "\t     [-srckeystore <srckeystore>] [-destkeystore <destkeystore>]" }, { "\t     [-srcstoretype <srcstoretype>] [-deststoretype <deststoretype>]", "\t     [-srcstoretype <srcstoretype>] [-deststoretype <deststoretype>]" }, { "\t     [-srcprotected] [-destprotected]", "\t     [-srcprotected] [-destprotected]" }, { "\t     [-srcstorepass <srcstorepass>] [-deststorepass <deststorepass>]", "\t     [-srcstorepass <srcstorepass>] [-deststorepass <deststorepass>]" }, { "\t     [-srcprovidername <srcprovidername>]\n\t     [-destprovidername <destprovidername>]", "\t     [-srcprovidername <srcprovidername>]\n\t     [-destprovidername <destprovidername>]" }, { "\t     [-srcalias <srcalias> [-destalias <destalias>]", "\t     [-srcalias <srcalias> [-destalias <destalias>]" }, { "\t       [-srckeypass <srckeypass>] [-destkeypass <destkeypass>]]", "\t       [-srckeypass <srckeypass>] [-destkeypass <destkeypass>]]" }, { "\t     [-noprompt]", "\t     [-noprompt]" }, { "-changealias [-v] [-protected] -alias <alias> -destalias <destalias>", "-changealias [-v] [-protected] -alias <alias> -destalias <destalias>" }, { "\t     [-keypass <keypass>]", "\t     [-keypass <keypass>]" }, { "-keypasswd   [-v] [-alias <alias>]", "-keypasswd   [-v] [-alias <alias>]" }, { "\t     [-keypass <old_keypass>] [-new <new_keypass>]", "\t     [-keypass <gammalt_nyckellösenord>] [-new <nytt_nyckellösenord>]" }, { "-list        [-v | -rfc] [-protected]", "-list        [-v | -rfc] [-protected]" }, { "\t     [-alias <alias>]", "\t     [-alias <alias>]" }, { "-printcert   [-v] [-file <cert_file>]", "-printcert   [-v] [-file <certifikatsfil>]" }, { "\t     [-alias <alias>]", "\t     [-alias <alias>]" }, { "-storepasswd [-v] [-new <new_storepass>]", "-storepasswd [-v] [-new <nytt_lagringslösenord>]" }, { "Warning: A public key for alias 'signers[i]' does not exist.  Make sure a KeyStore is properly configured.", "Varning! Det finns ingen offentlig nyckel för aliaset {0}. Kontrollera att det aktuella nyckellagret är korrekt konfigurerat." }, { "Warning: Class not found: class", "Varning! Klassen hittades inte: {0}" }, { "Warning: Invalid argument(s) for constructor: arg", "Varning! Ogiltigt/Ogiltiga argument för konstruktör: {0}" }, { "Illegal Principal Type: type", "Ogiltig huvudtyp: {0}" }, { "Illegal option: option", "Ogiltigt alternativ: {0}" }, { "Usage: policytool [options]", "Gör så här: policytool [alternativ]" }, { "  [-file <file>]    policy file location", "  [-file <fil>]    policyfilens plats" }, { "New", "Nytt" }, { "Open", "Öppna" }, { "Save", "Spara" }, { "Save As", "Spara som" }, { "View Warning Log", "Visa varningslogg" }, { "Exit", "Avsluta" }, { "Add Policy Entry", "Lägg till policypost" }, { "Edit Policy Entry", "Redigera policypost" }, { "Remove Policy Entry", "Ta bort policypost" }, { "Edit", "Redigera" }, { "Retain", "Behåll" }, { "Warning: File name may include escaped backslash characters. It is not necessary to escape backslash characters (the tool escapes characters as necessary when writing the policy contents to the persistent store).\n\nClick on Retain to retain the entered name, or click on Edit to edit the name.", "Warning: File name may include escaped backslash characters. It is not necessary to escape backslash characters (the tool escapes characters as necessary when writing the policy contents to the persistent store).\n\nClick on Retain to retain the entered name, or click on Edit to edit the name." }, { "Add Public Key Alias", "Lägg till offentligt nyckelalias" }, { "Remove Public Key Alias", "Ta bort offentligt nyckelalias" }, { "File", "Arkiv" }, { "KeyStore", "Nyckellager" }, { "Policy File:", "Policyfil:" }, { "Could not open policy file: policyFile: e.toString()", "Det går inte att öppna policyfilen: {0}: {1}" }, { "Policy Tool", "Policyverktyg" }, { "Errors have occurred while opening the policy configuration.  View the Warning Log for more information.", "Det uppstod ett fel när policykonfigurationen skulle öppnas.  Visa varningsloggen med ytterligare information." }, { "Error", "Fel" }, { "OK", "OK" }, { "Status", "Status" }, { "Warning", "Varning" }, { "Permission:                                                       ", "Behörighet:                                                       " }, { "Principal Type:", "Principaltyp:" }, { "Principal Name:", "Principalnamn:" }, { "Target Name:                                                    ", "Målets namn:                                                    " }, { "Actions:                                                             ", "Funktioner:                                                             " }, { "OK to overwrite existing file filename?", "Ska den befintliga filen {0} skrivas över?" }, { "Cancel", "Avbryt" }, { "CodeBase:", "CodeBase:" }, { "SignedBy:", "SignedBy:" }, { "Add Principal", "Lägg till principal" }, { "Edit Principal", "Redigera principal" }, { "Remove Principal", "Ta bort principal" }, { "Principals:", "Principaler:" }, { "  Add Permission", "  Lägg till behörighet" }, { "  Edit Permission", "  Redigera behörighet" }, { "Remove Permission", "Ta bort behörighet" }, { "Done", "Klar" }, { "KeyStore URL:", "Webbadress för nyckellager:" }, { "KeyStore Type:", "Nyckellagertyp:" }, { "KeyStore Provider:", "Nyckellagerleverantör:" }, { "KeyStore Password URL:", "Webbadress för lösenord till nyckellager:" }, { "Principals", "Principaler" }, { "  Edit Principal:", "  Redigera principal:" }, { "  Add New Principal:", "  Lägg till ny principal:" }, { "Permissions", "Behörighet" }, { "  Edit Permission:", "  Redigera behörighet:" }, { "  Add New Permission:", "  Lägg till ny behörighet:" }, { "Signed By:", "Signerad av:" }, { "Cannot Specify Principal with a Wildcard Class without a Wildcard Name", "Det går inte att specificera principal med wildcard-klass utan wildcard-namn" }, { "Cannot Specify Principal without a Name", "Det går inte att specificera principal utan namn" }, { "Permission and Target Name must have a value", "Behörighet och målnamn måste ha ett värde" }, { "Remove this Policy Entry?", "Vill du ta bort den här policyposten?" }, { "Overwrite File", "Skriva över fil" }, { "Policy successfully written to filename", "Policy har skrivits till {0}" }, { "null filename", "nullfilnamn" }, { "Save changes?", "Vill du spara ändringarna?" }, { "Yes", "Ja" }, { "No", "Nej" }, { "Policy Entry", "Policyfel" }, { "Save Changes", "Vill du spara ändringarna?" }, { "No Policy Entry selected", "Någon policypost har inte markerats" }, { "Unable to open KeyStore: ex.toString()", "Det går inte att öppna nyckellagret: {0}" }, { "No principal selected", "Ingen principal har markerats" }, { "No permission selected", "Någon behörighet har inte markerats" }, { "name", "namn" }, { "configuration type", "konfigurationstyp" }, { "environment variable name", "variabelnamn för miljö" }, { "library name", "biblioteksnamn" }, { "package name", "paketnamn" }, { "policy type", "policytyp" }, { "property name", "egenskapsnamn" }, { "provider name", "leverantörsnamn" }, { "Principal List", "Huvudlista" }, { "Permission List", "Behörighetslista" }, { "Code Base", "Kodbas" }, { "KeyStore U R L:", "Webbadress för nyckellager:" }, { "KeyStore Password U R L:", "Webbadress för lösenord till nyckellager:" }, { "invalid null input(s)", "ogiltiga null-indata" }, { "actions can only be 'read'", "funktioner kan endast 'läsas'" }, { "permission name [name] syntax invalid: ", "syntaxen för behörighetsnamnet [{0}] är ogiltig: " }, { "Credential Class not followed by a Principal Class and Name", "Kreditivklassen följs inte av principalklass eller principalnamn" }, { "Principal Class not followed by a Principal Name", "Principalklassen följs inte av något principalnamn" }, { "Principal Name must be surrounded by quotes", "Principalnamnet måste anges inom citattecken" }, { "Principal Name missing end quote", "Principalnamnet saknar avslutande citattecken" }, { "PrivateCredentialPermission Principal Class can not be a wildcard (*) value if Principal Name is not a wildcard (*) value", "Värdet för principalklassen PrivateCredentialPermission kan inte ha något jokertecken (*) om principalnamnet inte anges med jokertecken (*)" }, { "CredOwner:\n\tPrincipal Class = class\n\tPrincipal Name = name", "CredOwner:\n\tPrincipalklass = {0}\n\tPrincipalnamn = {1}" }, { "provided null name", "gav null-namn" }, { "provided null keyword map", "nullnyckelordsmappning tillhandahölls" }, { "provided null OID map", "null-OID-mappning tillhandahölls" }, { "invalid null AccessControlContext provided", "ogiltigt null-AccessControlContext" }, { "invalid null action provided", "ogiltig null-funktion" }, { "invalid null Class provided", "ogiltig null-klass" }, { "Subject:\n", "Ärende:\n" }, { "\tPrincipal: ", "\tPrincipal: " }, { "\tPublic Credential: ", "\tOffentligt kreditiv: " }, { "\tPrivate Credentials inaccessible\n", "\tPrivata kreditiv är otillgängliga\n" }, { "\tPrivate Credential: ", "\tPrivata kreditiv: " }, { "\tPrivate Credential inaccessible\n", "\tPrivata kreditiv är otillgängliga\n" }, { "Subject is read-only", "Ämnet är skrivskyddat" }, { "attempting to add an object which is not an instance of java.security.Principal to a Subject's Principal Set", "försök att lägga till ett objekt som inte är en förekomst av java.security.Principal till en principaluppsättning" }, { "attempting to add an object which is not an instance of class", "försöker lägga till ett objekt som inte är en förekomst av {0}" }, { "LoginModuleControlFlag: ", "LoginModuleControlFlag: " }, { "Invalid null input: name", "Ogiltiga null-indata: namn" }, { "No LoginModules configured for name", "Inga inloggningsmoduler har konfigurerats för {0}" }, { "invalid null Subject provided", "ogiltigt null-Subject" }, { "invalid null CallbackHandler provided", "ogiltig null-CallbackHandler" }, { "null subject - logout called before login", "null-subject - utloggning anropades före inloggning" }, { "unable to instantiate LoginModule, module, because it does not provide a no-argument constructor", "det går inta att representera LoginModule, {0}, eftersom den inte tillhandahåller någon argumentfri konstruktion" }, { "unable to instantiate LoginModule", "det går inte att representera LoginModule" }, { "unable to instantiate LoginModule: ", "inloggningsmodulen kan inte skapas: " }, { "unable to find LoginModule class: ", "det går inte att hitta LoginModule-klassen: " }, { "unable to access LoginModule: ", "det går inte att komma åt LoginModule: " }, { "Login Failure: all modules ignored", "Inloggningsfel: alla moduler ignoreras" }, { "java.security.policy: error parsing policy:\n\tmessage", "java.security.policy: fel vid analys av {0}:\n\t{1}" }, { "java.security.policy: error adding Permission, perm:\n\tmessage", "java.security.policy: fel vid tillägg av behörighet, {0}:\n\t{1}" }, { "java.security.policy: error adding Entry:\n\tmessage", "java.security.policy: fel vid tillägg av post:\n\t{0}" }, { "alias name not provided (pe.name)", "aliasnamn ej angivet ({0})" }, { "unable to perform substitution on alias, suffix", "kan ej ersätta aliasnamn, {0}" }, { "substitution value, prefix, unsupported", "ersättningsvärde, {0}, stöds ej" }, { "(", "(" }, { ")", ")" }, { "type can't be null", "typen kan inte vara null" }, { "keystorePasswordURL can not be specified without also specifying keystore", "det går inte att ange keystorePasswordURL utan att ange keystore" }, { "expected keystore type", "förväntad keystore-typ" }, { "expected keystore provider", "keystore-leverantör förväntades" }, { "multiple Codebase expressions", "flera Codebase-uttryck" }, { "multiple SignedBy expressions", "flera SignedBy-uttryck" }, { "SignedBy has empty alias", "SignedBy har ett tomt alias" }, { "can not specify Principal with a wildcard class without a wildcard name", "Det går inte att specificera principal genom att ange jokertecken för klass utan att samtidigt ange jokertecken för namn" }, { "expected codeBase or SignedBy or Principal", "förväntad codeBase eller SignedBy eller Principal" }, { "expected permission entry", "förväntade behörighetspost" }, { "number ", "antal " }, { "expected [expect], read [end of file]", "förväntade [{0}], läste [end of file]" }, { "expected [;], read [end of file]", "förväntade [;], läste [end of file]" }, { "line number: msg", "rad {0}: {1}" }, { "line number: expected [expect], found [actual]", "rad {0}: förväntade [{1}], hittade [{2}]" }, { "null principalClass or principalName", "null-principalClass eller -principalName" }, { "PKCS11 Token [providerName] Password: ", "PKCS11-pollett [{0}] Lösenord: " }, { "unable to instantiate Subject-based policy", "den Subject-baserade policyn kan inte skapas" } };

  public Object[][] getContents()
  {
    return contents;
  }
}