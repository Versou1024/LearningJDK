package sun.security.util;

import java.util.ListResourceBundle;

public class Resources_zh_CN extends ListResourceBundle
{
  private static final Object[][] contents = { { " ", " " }, { "  ", "  " }, { "      ", "      " }, { ", ", ", " }, { "\n", "\n" }, { "*******************************************", "*******************************************" }, { "*******************************************\n\n", "*******************************************\n\n" }, { "keytool error: ", "keytool错误： " }, { "Illegal option:  ", "非法选项：  " }, { "Try keytool -help", "尝试 keytool -help" }, { "Command option <flag> needs an argument.", "命令选项 {0} 需要一个参数。" }, { "Warning:  Different store and key passwords not supported for PKCS12 KeyStores. Ignoring user-specified <command> value.", "警告: PKCS12 KeyStores 不支持其他存储和密钥口令。忽略用户指定的 {0} 值。" }, { "-keystore must be NONE if -storetype is {0}", "如果 -storetype 为 {0}，则 -keystore 必须为 NONE" }, { "Too may retries, program terminated", "重试次数过多，程序已终止" }, { "-storepasswd and -keypasswd commands not supported if -storetype is {0}", "如果 -storetype 为 {0}，则不支持 -storepasswd 和 -keypasswd 命令" }, { "-keypasswd commands not supported if -storetype is PKCS12", "如果 -storetype 为 PKCS12，则不支持 -keypasswd 命令" }, { "-keypass and -new can not be specified if -storetype is {0}", "如果 -storetype 为 {0}，则不能指定 -keypass 和 -new" }, { "if -protected is specified, then -storepass, -keypass, and -new must not be specified", "如果指定了 -protected，则不要指定 -storepass、-keypass 和 -new" }, { "if -srcprotected is specified, then -srcstorepass and -srckeypass must not be specified", "如果指定了 -srcprotected，则不能指定 -srcstorepass 和 -srckeypass" }, { "if keystore is not password protected, then -storepass, -keypass, and -new must not be specified", "如果密钥库未受密码保护，则请勿指定 -storepass、-keypass 和 -new" }, { "if source keystore is not password protected, then -srcstorepass and -srckeypass must not be specified", "如果源密钥库未受密码保护，则请勿指定 -srcstorepass 和 -srckeypass" }, { "Validity must be greater than zero", "有效性必须大于零" }, { "provName not a provider", "{0}不是一个提供者" }, { "Usage error: no command provided", "用法错误: 没有提供命令" }, { "Usage error, <arg> is not a legal command", "用法错误，{0} 不是合法的命令" }, { "Source keystore file exists, but is empty: ", "源密钥库文件存在，但为空: " }, { "Please specify -srckeystore", "请指定 -srckeystore" }, { "Must not specify both -v and -rfc with 'list' command", "不得以「列表」指令来指定-v 及-rfc" }, { "Key password must be at least 6 characters", "关键密码至少必须为6个字符" }, { "New password must be at least 6 characters", "新密码至少必须为6个字符" }, { "Keystore file exists, but is empty: ", "Keystore文件存在，但为空文件： " }, { "Keystore file does not exist: ", "Keystore 文件不存在： " }, { "Must specify destination alias", "必须指定目的地别名" }, { "Must specify alias", "必须指定别名" }, { "Keystore password must be at least 6 characters", "Keystore 密码至少必须为6个字符" }, { "Enter keystore password:  ", "输入keystore密码：  " }, { "Enter source keystore password:  ", "输入源密钥库口令:  " }, { "Enter destination keystore password:  ", "输入目标密钥库口令:  " }, { "Keystore password is too short - must be at least 6 characters", "Keystore 密码太短 -至少必须为6个字符" }, { "Unknown Entry Type", "未知项类型" }, { "Too many failures. Alias not changed", "错误过多。未更改别名" }, { "Entry for alias <alias> successfully imported.", "已成功导入别名 {0} 项。" }, { "Entry for alias <alias> not imported.", "未导入别名 {0} 项。" }, { "Problem importing entry for alias <alias>: <exception>.\nEntry for alias <alias> not imported.", "导入别名 {0} 项时出现问题: {1}。\n未导入别名 {0} 项。" }, { "Import command completed:  <ok> entries successfully imported, <fail> entries failed or cancelled", "已完成导入命令: {0} 项成功导入，{1} 项失败或取消" }, { "Warning: Overwriting existing alias <alias> in destination keystore", "警告: 正在覆盖目标密钥库中的现有别名 {0}" }, { "Existing entry alias <alias> exists, overwrite? [no]:  ", "存在现有项别名 {0}，是否要覆盖？[否]:  " }, { "Too many failures - try later", "太多错误 - 请稍后再试" }, { "Certification request stored in file <filename>", "保存在文件中的认证要求 <{0}>" }, { "Submit this to your CA", "将此提交给您的CA" }, { "if alias not specified, destalias, srckeypass, and destkeypass must not be specified", "如果没有指定别名，则不能指定目标别名、源密钥库口令和目标密钥库口令" }, { "Certificate stored in file <filename>", "保存在文件中的认证 <{0}>" }, { "Certificate reply was installed in keystore", "认证回复已安装在 keystore中" }, { "Certificate reply was not installed in keystore", "认证回复未安装在 keystore中" }, { "Certificate was added to keystore", "认证已添加至keystore中" }, { "Certificate was not added to keystore", "认证未添加至keystore中" }, { "[Storing ksfname]", "[正在存储 {0}]" }, { "alias has no public key (certificate)", "{0} 没有公开金钥（认证）" }, { "Cannot derive signature algorithm", "无法取得签名算法" }, { "Alias <alias> does not exist", "别名 <{0}> 不存在" }, { "Alias <alias> has no certificate", "别名 <{0}> 没有认证" }, { "Key pair not generated, alias <alias> already exists", "没有创建键值对，别名 <{0}> 已经存在" }, { "Cannot derive signature algorithm", "无法取得签名算法" }, { "Generating keysize bit keyAlgName key pair and self-signed certificate (sigAlgName) with a validity of validality days\n\tfor: x500Name", "正在为以下对象生成 {0} 位 {1} 密钥对和自签名证书 ({2})（有效期为 {3} 天）:\n\t {4}" }, { "Enter key password for <alias>", "输入<{0}>的主密码" }, { "\t(RETURN if same as keystore password):  ", "\t（如果和 keystore 密码相同，按回车）：  " }, { "Key password is too short - must be at least 6 characters", "主密码太短 -至少必须为 6 个字符" }, { "Too many failures - key not added to keystore", "太多错误 - 键值未被添加至keystore中" }, { "Destination alias <dest> already exists", "目的地别名 <{0}> 已经存在" }, { "Password is too short - must be at least 6 characters", "密码太短 -至少必须为6个字符" }, { "Too many failures. Key entry not cloned", "太多错误。键值输入未被复制" }, { "key password for <alias>", "<{0}> 的主密码" }, { "Keystore entry for <id.getName()> already exists", "<{0}> 的 Keystore 输入已经存在" }, { "Creating keystore entry for <id.getName()> ...", "创建 <{0}> 的 keystore输入..." }, { "No entries from identity database added", "从添加的辨识数据库中，没有输入" }, { "Alias name: alias", "别名名称： {0}" }, { "Creation date: keyStore.getCreationDate(alias)", "创建日期： {0,date}" }, { "alias, keyStore.getCreationDate(alias), ", "{0}, {1,date}, " }, { "alias, ", "{0}, " }, { "Entry type: <type>", "项类型: {0}" }, { "Certificate chain length: ", "认证链长度： " }, { "Certificate[(i + 1)]:", "认证 [{0,number,integer}]:" }, { "Certificate fingerprint (MD5): ", "认证指纹 (MD5)： " }, { "Entry type: trustedCertEntry\n", "输入类型： trustedCertEntry\n" }, { "trustedCertEntry,", "trustedCertEntry," }, { "Keystore type: ", "Keystore 类型： " }, { "Keystore provider: ", "Keystore 提供者： " }, { "Your keystore contains keyStore.size() entry", "您的 keystore 包含 {0,number,integer} 输入" }, { "Your keystore contains keyStore.size() entries", "您的 keystore 包含 {0,number,integer} 输入" }, { "Failed to parse input", "无法对输入进行语法分析" }, { "Empty input", "空输入" }, { "Not X.509 certificate", "非 X.509 认证" }, { "Cannot derive signature algorithm", "无法取得签名算法" }, { "alias has no public key", "{0} 无公用密钥" }, { "alias has no X.509 certificate", "{0} 无 X.509 认证" }, { "New certificate (self-signed):", "新认证（自我签署）：" }, { "Reply has no certificates", "回复中没有认证" }, { "Certificate not imported, alias <alias> already exists", "认证未输入，别名 <{0}> 已经存在" }, { "Input not an X.509 certificate", "所输入的不是一个 X.509 认证" }, { "Certificate already exists in keystore under alias <trustalias>", "在 <{0}> 的别名之下，认证已经存在 keystore 中" }, { "Do you still want to add it? [no]:  ", "您仍然想要添加它吗？ [否]：  " }, { "Certificate already exists in system-wide CA keystore under alias <trustalias>", "在 <{0}> 的别名之下，认证已经存在于 CA keystore 整个系统之中" }, { "Do you still want to add it to your own keystore? [no]:  ", "您仍然想要将它添加到自己的keystore 吗？ [否]：  " }, { "Trust this certificate? [no]:  ", "信任这个认证？ [否]：  " }, { "YES", "是" }, { "New prompt: ", "新 {0}： " }, { "Passwords must differ", "必须是不同的密码" }, { "Re-enter new prompt: ", "重新输入新 {0}： " }, { "Re-enter new password: ", "再次输入新密码: " }, { "They don't match. Try again", "它们不匹配。请重试" }, { "Enter prompt alias name:  ", "输入 {0} 别名名称：  " }, { "Enter new alias name\t(RETURN to cancel import for this entry):  ", "输入新的别名\t（按回车键以取消对此项的导入）:  " }, { "Enter alias name:  ", "输入别名名称：  " }, { "\t(RETURN if same as for <otherAlias>)", "\t（如果和 <{0}> 的相同，按回车）" }, { "*PATTERN* printX509Cert", "所有者:{0}\n签发人:{1}\n序列号:{2}\n有效期: {3} 至{4}\n证书指纹:\n\t MD5:{5}\n\t SHA1:{6}\n\t 签名算法名称:{7}\n\t 版本: {8}" }, { "What is your first and last name?", "您的名字与姓氏是什么？" }, { "What is the name of your organizational unit?", "您的组织单位名称是什么？" }, { "What is the name of your organization?", "您的组织名称是什么？" }, { "What is the name of your City or Locality?", "您所在的城市或区域名称是什么？" }, { "What is the name of your State or Province?", "您所在的州或省份名称是什么？" }, { "What is the two-letter country code for this unit?", "该单位的两字母国家代码是什么" }, { "Is <name> correct?", "{0} 正确吗？" }, { "no", "否" }, { "yes", "是" }, { "y", "y" }, { "  [defaultValue]:  ", "  [{0}]：  " }, { "Alias <alias> has no key", "别名 <{0}> 没有密钥" }, { "Alias <alias> references an entry type that is not a private key entry.  The -keyclone command only supports cloning of private key entries", "别名 <{0}> 引用了不属于专用密钥项的项类型。-keyclone 命令仅支持对专用密钥项的克隆" }, { "*****************  WARNING WARNING WARNING  *****************", "***************** 警告 警告 警告  *****************" }, { "* The integrity of the information stored in your keystore  *", "*保存在您的 keystore 中数据的完整性  *" }, { "* The integrity of the information stored in the srckeystore*", "* srckeystore 中所存储的信息的完整性*" }, { "* has NOT been verified!  In order to verify its integrity, *", "* 尚未被验证！  为了验证其完整性， *" }, { "* you must provide your keystore password.                  *", "* 您必须提供您 keystore 的密码。                  *" }, { "* you must provide the srckeystore password.                *", "* 您必须提供源密钥库口令。                *" }, { "Certificate reply does not contain public key for <alias>", "认证回复并未包含 <{0}> 的公用密钥" }, { "Incomplete certificate chain in reply", "回复中的认证链不完整" }, { "Certificate chain in reply does not verify: ", "回复中的认证链未验证： " }, { "Top-level certificate in reply:\n", "回复中的最高级认证：\n" }, { "... is not trusted. ", "... 是不可信的。 " }, { "Install reply anyway? [no]:  ", "还是要安装回复？ [否]：  " }, { "NO", "否" }, { "Public keys in reply and keystore don't match", "回复中的公用密钥与 keystore 不符" }, { "Certificate reply and certificate in keystore are identical", "认证回复与keystore中的认证是相同的" }, { "Failed to establish chain from reply", "无法从回复中建立链接" }, { "n", "n" }, { "Wrong answer, try again", "错误的答案，请再试一次" }, { "Secret key not generated, alias <alias> already exists", "没有生成密钥，别名 <{0}> 已经存在" }, { "Please provide -keysize for secret key generation", "请提供 -keysize 以生成密钥" }, { "keytool usage:\n", "keytool 用法：\n" }, { "Extensions: ", "扩展: " }, { "-certreq     [-v] [-protected]", "-certreq     [-v] [-protected]" }, { "\t     [-alias <alias>] [-sigalg <sigalg>]", "\t     [-alias <别名>] [-sigalg <sigalg>]" }, { "\t     [-file <csr_file>] [-keypass <keypass>]", "\t     [-file <csr_file>] [-keypass <密钥库口令>]" }, { "\t     [-keystore <keystore>] [-storepass <storepass>]", "\t     [-keystore <密钥库>] [-storepass <存储库口令>]" }, { "\t     [-storetype <storetype>] [-providername <name>]", "\t     [-storetype <存储类型>] [-providername <名称>]" }, { "\t     [-providerclass <provider_class_name> [-providerarg <arg>]] ...", "\t     [-providerclass <提供方类名称> [-providerarg <参数>]] ..." }, { "\t     [-providerpath <pathlist>]", "\t     [-providerpath <路径列表>]" }, { "-delete      [-v] [-protected] -alias <alias>", "-delete      [-v] [-protected] -alias <别名>" }, { "-exportcert  [-v] [-rfc] [-protected]", "-exportcert  [-v] [-rfc] [-protected]" }, { "\t     [-alias <alias>] [-file <cert_file>]", "\t     [-alias <别名>] [-file <认证文件>]" }, { "-genkeypair  [-v] [-protected]", "-genkeypair  [-v] [-protected]" }, { "\t     [-alias <alias>]", "\t     [-alias <别名>]" }, { "\t     [-keyalg <keyalg>] [-keysize <keysize>]", "\t     [-keyalg <keyalg>] [-keysize <密钥大小>]" }, { "\t     [-sigalg <sigalg>] [-dname <dname>]", "\t     [-sigalg <sigalg>] [-dname <dname>]" }, { "\t     [-validity <valDays>] [-keypass <keypass>]", "\t     [-validity <valDays>] [-keypass <密钥库口令>]" }, { "-genseckey   [-v] [-protected]", "-genseckey   [-v] [-protected]" }, { "-help", "-help" }, { "-importcert  [-v] [-noprompt] [-trustcacerts] [-protected]", "-importcert  [-v] [-noprompt] [-trustcacerts] [-protected]" }, { "\t     [-alias <alias>]", "\t     [-alias <别名>]" }, { "\t     [-alias <alias>] [-keypass <keypass>]", "\t     [-alias <别名>] [-keypass <密钥库口令>]" }, { "\t     [-file <cert_file>] [-keypass <keypass>]", "\t     [-file <认证文件>] [-keypass <密钥库口令>]" }, { "-importkeystore [-v] ", "-importkeystore [-v] " }, { "\t     [-srckeystore <srckeystore>] [-destkeystore <destkeystore>]", "\t     [-srckeystore <源密钥库>] [-destkeystore <目标密钥库>]" }, { "\t     [-srcstoretype <srcstoretype>] [-deststoretype <deststoretype>]", "\t     [-srcstoretype <源存储类型>] [-deststoretype <目标存储类型>]" }, { "\t     [-srcprotected] [-destprotected]", "\t     [-srcprotected] [-destprotected]" }, { "\t     [-srcstorepass <srcstorepass>] [-deststorepass <deststorepass>]", "\t     [-srcstorepass <源存储库口令>] [-deststorepass <目标存储库口令>]" }, { "\t     [-srcprovidername <srcprovidername>]\n\t     [-destprovidername <destprovidername>]", "\t     [-srcprovidername <源提供方名称>]\n\t     [-destprovidername <目标提供方名称>]" }, { "\t     [-srcalias <srcalias> [-destalias <destalias>]", "\t     [-srcalias <源别名> [-destalias <目标别名>]" }, { "\t       [-srckeypass <srckeypass>] [-destkeypass <destkeypass>]]", "\t       [-srckeypass <源密钥库口令>] [-destkeypass <目标密钥库口令>]]" }, { "\t     [-noprompt]", "\t     [-noprompt]" }, { "-changealias [-v] [-protected] -alias <alias> -destalias <destalias>", "-changealias [-v] [-protected] -alias <别名> -destalias <目标别名>" }, { "\t     [-keypass <keypass>]", "\t     [-keypass <密钥库口令>]" }, { "-keypasswd   [-v] [-alias <alias>]", "-keypasswd   [-v] [-alias <别名>]" }, { "\t     [-keypass <old_keypass>] [-new <new_keypass>]", "\t     [-keypass <旧密钥库口令>] [-new <新密钥库口令>]" }, { "-list        [-v | -rfc] [-protected]", "-list        [-v | -rfc] [-protected]" }, { "\t     [-alias <alias>]", "\t     [-alias <别名>]" }, { "-printcert   [-v] [-file <cert_file>]", "-printcert   [-v] [-file <认证文件>]" }, { "\t     [-alias <alias>]", "\t     [-alias <别名>]" }, { "-storepasswd [-v] [-new <new_storepass>]", "-storepasswd [-v] [-new <新存储库口令>]" }, { "Warning: A public key for alias 'signers[i]' does not exist.  Make sure a KeyStore is properly configured.", "警告: 别名 {0} 的公用密钥不存在。请确保已正确配置密钥库。" }, { "Warning: Class not found: class", "警告: 找不到类: {0}" }, { "Warning: Invalid argument(s) for constructor: arg", "警告: 构造函数的参数无效: {0}" }, { "Illegal Principal Type: type", "非法的 Principal 类型: {0}" }, { "Illegal option: option", "非法选项: {0}" }, { "Usage: policytool [options]", "用法： policytool [选项]" }, { "  [-file <file>]    policy file location", "  [-file <file>]    规则文件位置" }, { "New", "新文件" }, { "Open", "打开" }, { "Save", "保存" }, { "Save As", "另存为" }, { "View Warning Log", "查看警告记录" }, { "Exit", "退出" }, { "Add Policy Entry", "添加规则项目" }, { "Edit Policy Entry", "编辑规则项目" }, { "Remove Policy Entry", "删除规则项目" }, { "Edit", "编辑" }, { "Retain", "保持" }, { "Warning: File name may include escaped backslash characters. It is not necessary to escape backslash characters (the tool escapes characters as necessary when writing the policy contents to the persistent store).\n\nClick on Retain to retain the entered name, or click on Edit to edit the name.", "Warning: File name may include escaped backslash characters. It is not necessary to escape backslash characters (the tool escapes characters as necessary when writing the policy contents to the persistent store).\n\nClick on Retain to retain the entered name, or click on Edit to edit the name." }, { "Add Public Key Alias", "添加公用密钥别名" }, { "Remove Public Key Alias", "删除公用密钥别名" }, { "File", "文件" }, { "KeyStore", "密钥库" }, { "Policy File:", "规则文件：" }, { "Could not open policy file: policyFile: e.toString()", "无法打开策略文件: {0}: {1}" }, { "Policy Tool", "规则工具" }, { "Errors have occurred while opening the policy configuration.  View the Warning Log for more information.", "打开规则配置时发生错误。 请查看警告记录获取更多信息" }, { "Error", "错误" }, { "OK", "确认" }, { "Status", "状态" }, { "Warning", "警告" }, { "Permission:                                                       ", "许可：                                                       " }, { "Principal Type:", "Principal 类型：" }, { "Principal Name:", "Principal 名称：" }, { "Target Name:                                                    ", "目标名称：                                                    " }, { "Actions:                                                             ", "动作：                                                             " }, { "OK to overwrite existing file filename?", "确认替换现有的文件 {0}？" }, { "Cancel", "取消" }, { "CodeBase:", "CodeBase:" }, { "SignedBy:", "SignedBy:" }, { "Add Principal", "添加 Principal" }, { "Edit Principal", "编辑 Principal" }, { "Remove Principal", "删除 Principal" }, { "Principals:", "Principals：" }, { "  Add Permission", "  添加权限" }, { "  Edit Permission", "  编辑权限" }, { "Remove Permission", "删除权限" }, { "Done", "完成" }, { "KeyStore URL:", "密钥库 URL:" }, { "KeyStore Type:", "密钥库类型:" }, { "KeyStore Provider:", "密钥库提供者:" }, { "KeyStore Password URL:", "密钥库口令 URL:" }, { "Principals", "Principals" }, { "  Edit Principal:", "  编辑 Principal：" }, { "  Add New Principal:", "  加入新 Principal：" }, { "Permissions", "权限" }, { "  Edit Permission:", "  编辑权限" }, { "  Add New Permission:", "  加入新的权限" }, { "Signed By:", "签署人：" }, { "Cannot Specify Principal with a Wildcard Class without a Wildcard Name", "没有通配符名称，无法用通配符类别指定Principal" }, { "Cannot Specify Principal without a Name", "没有名称，无法指定 Principal" }, { "Permission and Target Name must have a value", "权限及目标名必须有一个值。" }, { "Remove this Policy Entry?", "删除此规则项？" }, { "Overwrite File", "替换文件" }, { "Policy successfully written to filename", "规则成功写至 {0}" }, { "null filename", "无效的文件名" }, { "Save changes?", "是否保存所做的更改？" }, { "Yes", "是" }, { "No", "否" }, { "Policy Entry", "规则项目" }, { "Save Changes", "保存修改" }, { "No Policy Entry selected", "没有选择规则项目" }, { "Unable to open KeyStore: ex.toString()", "无法打开密钥库: {0}" }, { "No principal selected", "未选择 Principal" }, { "No permission selected", "没有选择权限" }, { "name", "名称" }, { "configuration type", "配置类型" }, { "environment variable name", "环境变量名" }, { "library name", "程序库名称" }, { "package name", "软件包名称" }, { "policy type", "策略类型" }, { "property name", "属性名称" }, { "provider name", "提供者名称" }, { "Principal List", "Principal 列表" }, { "Permission List", "权限列表" }, { "Code Base", "Code Base（代码库）" }, { "KeyStore U R L:", "密钥库 URL:" }, { "KeyStore Password U R L:", "密钥库口令 URL:" }, { "invalid null input(s)", "无效空输入" }, { "actions can only be 'read'", "动作只能被‘读取'" }, { "permission name [name] syntax invalid: ", "权限名称 [{0}]语法无效： " }, { "Credential Class not followed by a Principal Class and Name", "认证等级后未加上Principal 类别及名称" }, { "Principal Class not followed by a Principal Name", "Principal 类别后面没加上Principal 名称" }, { "Principal Name must be surrounded by quotes", "Principal 名称必须放在引号内" }, { "Principal Name missing end quote", "Principal 名称缺少下引号" }, { "PrivateCredentialPermission Principal Class can not be a wildcard (*) value if Principal Name is not a wildcard (*) value", "如果 Principal 名称不是一个通配符 (*) 值，那么 PrivateCredentialPermission Principal 类别就不会是一个通配符 (*) 值" }, { "CredOwner:\n\tPrincipal Class = class\n\tPrincipal Name = name", "CredOwner:\n\tPrincipal 类别 = {0}\n\tPrincipal 名称 = {1}" }, { "provided null name", "所供名称无效" }, { "provided null keyword map", "提供了空关键字映射" }, { "provided null OID map", "提供了空 OID 映射" }, { "invalid null AccessControlContext provided", "提供无效的空 AccessControlContext" }, { "invalid null action provided", "提供了无效的空动作" }, { "invalid null Class provided", "提供了无效的空类别" }, { "Subject:\n", "主题：\n" }, { "\tPrincipal: ", "\tPrincipal: " }, { "\tPublic Credential: ", "\t公用认证 " }, { "\tPrivate Credentials inaccessible\n", "\t无法访问私人认证\n" }, { "\tPrivate Credential: ", "\t私人认证 " }, { "\tPrivate Credential inaccessible\n", "\t无法访问私人认证\n" }, { "Subject is read-only", "主题为只读" }, { "attempting to add an object which is not an instance of java.security.Principal to a Subject's Principal Set", "试图将一个非 java.security.Principal 实例的对象添加至主题的 Principal 集中" }, { "attempting to add an object which is not an instance of class", "试图添加一个非 {0} 实例的对象" }, { "LoginModuleControlFlag: ", "LoginModuleControlFlag: " }, { "Invalid null input: name", "无效空输入：名称" }, { "No LoginModules configured for name", "没有为 {0} 配置LoginModules" }, { "invalid null Subject provided", "提供了无效空主题" }, { "invalid null CallbackHandler provided", "提供了无效的空 CallbackHandler" }, { "null subject - logout called before login", "无效主题 - 在登录之前即被调用注销" }, { "unable to instantiate LoginModule, module, because it does not provide a no-argument constructor", "无法例示 LoginModule， {0}，因为它并未提供一个不含参数的构造程序" }, { "unable to instantiate LoginModule", "无法例示 LoginModule" }, { "unable to instantiate LoginModule: ", "无法实例化 LoginModule: " }, { "unable to find LoginModule class: ", "无法找到 LoginModule 类别： " }, { "unable to access LoginModule: ", "无法访问 LoginModule: " }, { "Login Failure: all modules ignored", "登录失败：忽略所有模块" }, { "java.security.policy: error parsing policy:\n\tmessage", "java.security.policy: 解析错误 {0}：\n\t{1}" }, { "java.security.policy: error adding Permission, perm:\n\tmessage", "java.security.policy: 添加权限错误 {0}：\n\t{1}" }, { "java.security.policy: error adding Entry:\n\tmessage", "java.security.policy: 添加项目错误：\n\t{0}" }, { "alias name not provided (pe.name)", "未提供别名 ({0})" }, { "unable to perform substitution on alias, suffix", "不能在别名上执行替代， {0}" }, { "substitution value, prefix, unsupported", "替代值 {0} 不受支持" }, { "(", "(" }, { ")", ")" }, { "type can't be null", "不能为无效类型" }, { "keystorePasswordURL can not be specified without also specifying keystore", "不指定 keystore 时无法指定 keystorePasswordURL" }, { "expected keystore type", "预期的 keystore 类型" }, { "expected keystore provider", "预期的 keystore 提供者" }, { "multiple Codebase expressions", "多种 Codebase 表达式" }, { "multiple SignedBy expressions", "多种 SignedBy 表达式" }, { "SignedBy has empty alias", "SignedBy 有空别名" }, { "can not specify Principal with a wildcard class without a wildcard name", "没有通配符名称，无法用通配符类别指定Principal" }, { "expected codeBase or SignedBy or Principal", "预期的 codeBase 或 SignedBy 或 Principal" }, { "expected permission entry", "预期的权限项目" }, { "number ", "号码" }, { "expected [expect], read [end of file]", "预期的 [{0}], 读取 [end of file]" }, { "expected [;], read [end of file]", "预期的 [;], 读取[end of file]" }, { "line number: msg", "列 {0}： {1}" }, { "line number: expected [expect], found [actual]", "行号 {0}：预期的 [{1}]，找到 [{2}]" }, { "null principalClass or principalName", "无效 principalClass 或 principalName" }, { "PKCS11 Token [providerName] Password: ", "PKCS11 Token [{0}] 密码: " }, { "unable to instantiate Subject-based policy", "无法实例化基于主题的策略" } };

  public Object[][] getContents()
  {
    return contents;
  }
}